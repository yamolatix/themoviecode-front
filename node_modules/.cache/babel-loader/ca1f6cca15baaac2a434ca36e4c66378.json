{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/home/yamilaortiztoscano/Desktop/YAMO/Plataforma 5/Git Repositories/tmdb-movie-code/client/src/components/Grid/Grid.jsx\";\n\nimport React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MovieCard from \"../../commons/MovieCard/MovieCard\";\nimport TvShowCard from \"../../commons/TvShowCard/TvShowCard\";\nimport \"./grid.css\";\n\nvar Grid = function Grid(_ref) {\n  var cardIndex = _ref.cardIndex;\n  var movies = useSelector(function (state) {\n    return state.movies;\n  });\n  var tvshows = useSelector(function (state) {\n    return state.tvshows;\n  });\n  return (\n    /*#__PURE__*/\n\n    /*  movies ? ( */\n    React.createElement(\"ul\", {\n      className: \"template_grid\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    }, movies.map(function (movie, i) {\n      return /*#__PURE__*/React.createElement(MovieCard, {\n        key: i,\n        movie: movie,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      });\n    }))\n    /* ) : (\n        <ul className=\"template_grid\">\n            {tvshows.map((tvshow, i) => (\n                <TvShowCard key={i} tvshow={tvshow} />\n            ))}\n        </ul>\n    )\n    */\n\n  );\n};\n\nexport default Grid;","map":{"version":3,"names":["React","useSelector","MovieCard","TvShowCard","Grid","cardIndex","movies","state","tvshows","map","movie","i"],"sources":["/home/yamilaortiztoscano/Desktop/YAMO/Plataforma 5/Git Repositories/tmdb-movie-code/client/src/components/Grid/Grid.jsx"],"sourcesContent":["import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport MovieCard from \"../../commons/MovieCard/MovieCard\";\nimport TvShowCard from \"../../commons/TvShowCard/TvShowCard\";\n\nimport \"./grid.css\"\n\nconst Grid = ({cardIndex}) => {\n\n    const movies = useSelector(state => state.movies)\n    const tvshows = useSelector(state => state.tvshows)\n\n    return (\n       /*  movies ? ( */\n            <ul className=\"template_grid\">\n                {movies.map((movie, i) => (\n                    <MovieCard key={i} movie={movie} />\n                ))}\n            </ul>\n        /* ) : (\n            <ul className=\"template_grid\">\n                {tvshows.map((tvshow, i) => (\n                    <TvShowCard key={i} tvshow={tvshow} />\n                ))}\n            </ul>\n        )\n */\n    )\n};\n\nexport default Grid;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,YAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAiB;EAAA,IAAfC,SAAe,QAAfA,SAAe;EAE1B,IAAMC,MAAM,GAAGL,WAAW,CAAC,UAAAM,KAAK;IAAA,OAAIA,KAAK,CAACD,MAAV;EAAA,CAAN,CAA1B;EACA,IAAME,OAAO,GAAGP,WAAW,CAAC,UAAAM,KAAK;IAAA,OAAIA,KAAK,CAACC,OAAV;EAAA,CAAN,CAA3B;EAEA;IAAA;;IACG;IACK;MAAI,SAAS,EAAC,eAAd;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GACKF,MAAM,CAACG,GAAP,CAAW,UAACC,KAAD,EAAQC,CAAR;MAAA,oBACR,oBAAC,SAAD;QAAW,GAAG,EAAEA,CAAhB;QAAmB,KAAK,EAAED,KAA1B;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADQ;IAAA,CAAX,CADL;IAKJ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;EAdI;AAgBH,CArBD;;AAuBA,eAAeN,IAAf"},"metadata":{},"sourceType":"module"}